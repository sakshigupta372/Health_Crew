import os
from rich import print
from rich.prompt import Prompt
from .workflows import build_diagnosis_crew
from .utils.logging import get_logger
from .config import OPENAI_MODEL

logger = get_logger(__name__)


def _gather_inputs():
    print("[bold cyan]Healthcare Diagnosis Support (CrewAI Demo)[/bold cyan]")
    symptoms = Prompt.ask("Enter primary symptoms (comma-separated)")
    demographics = Prompt.ask("Enter demographics (e.g., age 45, male)")
    history = Prompt.ask("Enter brief medical history")
    medications = Prompt.ask("Enter current medications (comma-separated)")
    allergies = Prompt.ask("Enter allergies (comma-separated, leave blank if none)")

    return {
        "symptoms": symptoms,
        "demographics": demographics,
        "history": history,
        "medications": medications,
        "allergies": allergies,
        # placeholders carried forward through tasks
        "working_differential": "To be generated by Symptom Analyzer",
        "diagnosis_summary": "To be generated by previous steps",
        "proposed_medications": medications,
        "conditions": "From differential/diagnosis",
        "treatment_plan": "To be generated by Treatment Agent",
        "referral_plan": "To be generated by Referral Agent",
        "clinical_summary": "Consolidated output",
    }


def main():
    crew = build_diagnosis_crew(verbose=True)
    inputs = _gather_inputs()
    print(f"\n[bold yellow]Running diagnosis crew with OpenAI model: {OPENAI_MODEL}...[/bold yellow]")
    result = crew.kickoff(inputs=inputs)
    print("\n[bold green]Crew Result[/bold green]")
    print(result)


if __name__ == "__main__":
    main()
